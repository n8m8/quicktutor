Simple Text Readme Aditya Malik
Entry for week 7:
- Met with Kian and Nathan to discuss next steps on Todo
- Read up documentation on Flask Flash
- Wrote and implemented flask flash in areas necessary with front-end and backend code

Bugs: 
- Indentation errors found various times

Entry for week 6:
- Worked on routing front end listing to backend database
- Read up on possibility of using PHP as an alternative if we continue to request issues
- Added  HTML edits on listings
- Wrote javascript code for sendingDataTest, continuing to test through this

Bugs:
- Cookies causing crashes when loading database from python app.py

Entry for week 5:
- Started off week with fixing debugging issues with flask upon running DB (found conflicting user data, had to reinstall many apps)
- Worked on testing backend with frontend team Kian and Mammen
- Requested and retrieved API key from Google
- Read up on Google Maps with Flask integration and wrote up testing code for pulling Google maps API (not quite working the way I want it to)
- pip install flask-googlemaps
- Wrote frontend HTML code for pulling up searches on Google maps, need to integrate this with a database to store actual locations to use later for tutor requests
- Read up documentation on marker creation, working on saving markers to SQLite3 database (implementing new create table)
Bugs:
- Sometimes receiving traceback errors in calling Flask GoogleMaps, was having the same issues earlier with sessions, need further investigation



Entry for week 4:
- Had group meeting to go over next steps and what each group member needs to do
- Wrote up minutes for 2hr group meeting to go over steps and typed up in Minutes.txt
- Read up on SocketIO with Flask and Sessions with Flask, and other communication protocols to use
- Coded dbMessages.py to help function as backend receiving message requests from Flask SocketIO
- Coded dbSessions.py to handle different user sessions, need to go through and test out with front-end team
  since they need to have the HTML routes going through to check for different users
- Wrote up QuickTutor abstract for the group and submitted to professor Ray, also listed on this repo under Abstract.txt


Entry for week 3:
- Finished splitting of files and removed unnecessary functions, files, and extra stuff
- Created functions to retrieve all users, classes, and listings
- Built initial functions to retrieve user information from front end login
- Updated app.py to include get and post requests
- Updated original database create tables to create a rUserClasses tables upon creation
- Waiting on front-end to fully create UI elements before implementing a test


Entry for week 2:
- Continuing updating and creating input functions from front-end team
- Created new db files for separating away from calling everything in main function
- Added functions for creating users, listings, help pairs, messages, and classes in python dbRequests
- Continuing testing input data to see if everything is working as intended
- Created four different logo designs to be used for front end development
- Continued testing various queries to check if we can input data into tables correctly
- So far no errors while running data, working through algorithm to fetch input data and store in an array to retrieve later



Entry for week 1:
- Completed schema for the SQLite3 database that will house our backend information
- Set up SQLite3 database using Python and will continue adding and testing in the material as data is given by the front-end UI
- Tested creating SQLite3 connection and it went through!
- Found a few bugs in the original database design which we need to fix together as a team
- Will continue to read through the documentation of SQLite3 w/ Python to make sure things go smoothly
Problems:
- We have tutorID as another foreign key but what is it referencing? -> Discuss with Nathan
